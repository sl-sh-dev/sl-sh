#!/usr/bin/env slosh

;; TODO PC you should be able to remove mdbook from slosh_test, slosh_test binary
;; might be unnecessary and fcns inside slosh-test might be able to move to slosh
;; behind a feature flag or something EITHER WAY, just keep the deps out of the main bin.

;; TODO PC write docs about mdbook vs. mdbook serve vs. building w/ and w/o the supplemental stuff etc.etc.

;; what is a possible set -e equivalent?

(def *do-supplemental* #t)

(prn "args: " *args*)

(def args-local *args*)

;; TODO PC args w/o skip-supplemental ran into an issue, need a cache clearing mechanism.
(when (and (>= (len *args*) 2) (= args-local.1 "skip-supplemental"))
    (set! *do-supplemental* #f))

;; (def *skip-remove* #f)
;; (when (and (>= (len *args*) 2) (= args-local.0 "remove-static-files"))
;;     (set! *skip-remove* #t))
;; (when (not *skip-remove*) $(rm -rf src/legacy/ src/all-rust-docs/ src/slosh-rust-docs/))

(sh "export RUST_LOG=DEBUG")

(prn "do supplemental: " *do-supplemental*)

(when *do-supplemental*
    (do
        (prn "clone in the legacy gh pages docs")
        (sh "git clone -b gh-pages-legacy-html https://github.com/sl-sh-dev/sl-sh src/legacy/")

        (prn "Remove legacy/.git submodule directory")
        ;; don't want git submodules
        $(rm -rf src/legacy/.git)
        (prn "Make rust docs pages")
        $(mkdir src/all-rust-docs)
        $(mkdir src/slosh-rust-docs)

        (prn "Build rust docs")
        ;; build rust documentation
        $(cargo doc --features lisp-test --target-dir src/all-rust-docs)
        $(cargo doc --no-deps --document-private-items --features lisp-test --target-dir src/slosh-rust-docs)))


(prn "Build workspace")
$(cargo build --workspace)

(prn "Build doc extension")
$(cd ${PWD}/mdbook-slosh-eval)
(sh "cargo build")
(sh "cd -")

(sh "export PATH=$PATH:./mdbook-slosh-eval/target/debug")
(sh "mdbook build")


(sh "./search-hack-patch.sh")
