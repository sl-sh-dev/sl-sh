#!/usr/bin/env slosh

;; TODO PC you should be able to remove mdbook from slosh_test, slosh_test binary
;; might be unnecessary and fcns inside slosh-test might be able to move to slosh
;; behind a feature flag or something EITHER WAY, just keep the deps out of the main bin.

;; what is a possible set -e equivalent?

(def legacy-doc-path "src/legacy")
(def slosh-rust-doc-path "src/slosh-rust-docs")
(def all-rust-doc-path "src/all-rust-docs")
(def help "Usage:
(def *do-supplemental* #t)
(def serve #f)

./mk-site.slosh build|serve [skip-supplemental]

Generate the slosh static documentation site.

First argument must be build or serve. Build generates the mdbook one time into
the folder ./book. Serve hosts the static site on localhost:3000 and automatically
updates when any files in ./src change.

Optional second argument is `skip-supplemental`. Include if quick feedback loops
are needed because the supplemental materials take a lot longer to process because
they contain a lot of raw html which must be handled by mdbook.")

(def *do-supplemental* #t)

(def args-local *args*)

;; Fail if args is 0 or 3.
(when (or (< (len *args*) 1) (> (len *args*) 3))
    (do (eprn "Takes 1 or 2 arguments. First arugment must be `build` or `serve` second can be `skip-supplemental`")
    (eprn help)
    (exit 1)))

(when (and (<= (len *args*) 2) (or (= args-local.0 "build") (= args-local.0 "serve")))
    (do (eprn "First argument must be build or serve")
    (exit 1)))

(when (not (or (= args-local.1 "build") (= args-local.1 "serve")))
    (do (eprn "First argument must be build or serve.")
    (eprn help)
    (exit 1)))

(when (= (len *args*) 3)
	(if (= args-local.2 "skip-supplemental")
		(set! *do-supplemental* #f)
		(do (eprn "Optional second argument can only be string skip-supplemental.")
			(eprn help)
			(exit 1))))

(sh "export RUST_LOG=DEBUG")

(prn "args: " *args*)

(prn "do supplemental: " *do-supplemental*)

(if *do-supplemental*
    (do
        (prn "clone in the legacy gh pages docs")
        (sh (str "git clone -b gh-pages-legacy-html https://github.com/sl-sh-dev/sl-sh" legacy-doc-path))
        (prn "Remove legacy/.git submodule directory")
        ;; don't want .git dir
        (let (legacy-git (str legacy-doc-path "/.git"))
            $(rm -rf ~legacy-git))
        (prn "Make rust docs pages dirs")
        $(mkdir -p ~slosh-rust-doc-path)
        $(mkdir -p ~all-rust-doc-path)

        (prn "Build rust docs")
        ;; build rust documentation
        $(cargo doc --features lisp-test --target-dir ~all-rust-doc-path)
        $(cargo doc --no-deps --document-private-items --features lisp-test --target-dir ~slosh-rust-doc-path))
    $(rm -rf ~legacy-doc-path ~slosh-rust-doc-path ~all-rust-doc-path))


(prn "Build workspace")
$(cargo build --workspace)

(prn "Build doc extension")
$(cd ${PWD}/mdbook-slosh-eval)
$(cargo build)
$(cd -)

$(export PATH=$PATH:./mdbook-slosh-eval/target/debug)

$(mdbook build)

(sh "./search-hack-patch.sh")

(when (= args-local.1 "serve")
    $(mdbook serve))
