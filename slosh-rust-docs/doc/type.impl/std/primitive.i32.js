(function() {
    var type_impls = Object.fromEntries([["shell",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IsMinusOne-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/shell/platform/unix.rs.html#505\">Source</a><a href=\"#impl-IsMinusOne-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"shell/platform/unix/trait.IsMinusOne.html\" title=\"trait shell::platform::unix::IsMinusOne\">IsMinusOne</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.is_minus_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/shell/platform/unix.rs.html#505\">Source</a><a href=\"#method.is_minus_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"shell/platform/unix/trait.IsMinusOne.html#tymethod.is_minus_one\" class=\"fn\">is_minus_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","IsMinusOne","shell::platform::unix::OsSignal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CUnixPid%3E-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"src/shell/platform/unix.rs.html#440-446\">Source</a><a href=\"#impl-TryFrom%3CUnixPid%3E-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"shell/platform/struct.UnixPid.html\" title=\"struct shell::platform::UnixPid\">UnixPid</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/shell/platform/unix.rs.html#441\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/shell/platform/unix.rs.html#443-445\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"struct\" href=\"shell/platform/struct.UnixPid.html\" title=\"struct shell::platform::UnixPid\">UnixPid</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<UnixPid>","shell::platform::unix::OsSignal"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[3559]}