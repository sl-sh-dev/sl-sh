searchState.loadedDescShard("sl_console", 0, "Sl-console is a pure Rust, bindless library for low-level …\nClearing the screen.\nColor managemement.\nSupport access to the console.\nCursor movement.\nMouse and key events.\nUser input\nIs this stream a TTY?\nManaging raw mode.\nManaging switching between main and alternate screen …\nScrolling.\nText styling management.\nGet the size of the terminal.\nGet the size of the terminal, in pixels\nClear everything after the cursor.\nClear the entire screen.\nClear everything before the cursor.\nClear the current line.\nClear from cursor to newline.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn arbitrary ANSI color value.\nA background color.\nBlack.\nBlue.\nA terminal color.\nCyan.\nA foreground color.\nGreen.\nHigh-intensity light black.\nHigh-intensity light blue.\nHigh-intensity light cyan.\nHigh-intensity light green.\nHigh-intensity light magenta.\nHigh-intensity light red.\nHigh-intensity light white.\nHigh-intensity light yellow.\nMagenta.\nRed.\nReset colors to defaults.\nA truecolor RGB.\nWhite.\nYellow.\nReturns the ANSI escape sequences as a string.\nReturns the ANSI escape sequences as a string.\nReturns the ANSI escape sequences as a string.\nReturns the ANSI escape sequences as a string.\nReturns the ANSI escape sequences as a string.\nReturns the ANSI escape sequences as a string.\nReturns the ANSI escape sequences as a string.\nReturns the ANSI escape sequences as a string.\nReturns the ANSI escape sequences as a string.\nReturns the ANSI escape sequences as a string.\nReturns the ANSI escape sequences as a string.\nReturns the ANSI escape sequences as a string.\nReturns the ANSI escape sequences as a string.\nReturns the ANSI escape sequences as a string.\nReturns the ANSI escape sequences as a string.\nReturns the ANSI escape sequences as a string.\nReturns the ANSI sequence as a string.\nReturns the ANSI sequence as a string.\nReturns the ANSI sequence as a string.\nReturns the ANSI escape sequence as a string.\nReturns the ANSI escape sequence as a string.\nReturns the ANSI escape sequence as a string.\nReturns the ANSI escape sequence as a string.\nReturns the ANSI escape sequence as a string.\nReturns the ANSI escape sequence as a string.\nReturns the ANSI escape sequence as a string.\nReturns the ANSI escape sequence as a string.\nReturns the ANSI escape sequence as a string.\nReturns the ANSI escape sequence as a string.\nReturns the ANSI escape sequence as a string.\nReturns the ANSI escape sequence as a string.\nReturns the ANSI escape sequence as a string.\nReturns the ANSI escape sequence as a string.\nReturns the ANSI escape sequence as a string.\nReturns the ANSI escape sequence as a string.\nReturns the ANSI sequence as a string.\nReturns the ANSI sequence as a string.\nReturns the ANSI sequence as a string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGrayscale color.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n216-color (r, g, b ≤ 5) RGB.\nWrite the background version of this color.\nWrite the foreground version of this color.\nRepresents the input side of the tty/console terminal.\nRepresents the output side of the tty/console terminal.\nRepresents the input side of the tty/console terminal.\nA locked console input device.\nRepresents the output side of the tty/console terminal.\nA locked console output device.\nConsole input trait.\nConsole output trait.\nInitialize the console lib.\nLock and return read side of the tty/console for the …\nLock and return read side of the tty/console for the …\nLock and return write side of the tty/console for the …\nLock and return write side of the tty/console for the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the next input event from the console and the bytes …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if in raw mode.\nLocks the input console and returns a guard.\nLocks the output console and returns a guard.\nReturn when more data is avialable or timeout is reached. …\nRead data (like read) but with an optional timeout. If …\nSwitch the raw mode, true enters raw mode and false exits …\nTries to lock the input console and returns Some(guard) if …\nTries to lock the output console and returns Some(guard) …\nChange the cursor style to blinking bar\nChange the cursor style to blinking block\nChange the cursor style to blinking underline\nMove cursor down.\nGoto some position ((1,1)-based).\nHide the cursor.\nHide the cursor for the lifetime of this struct. It will …\nMove cursor left.\nRestore the cursor.\nMove cursor right.\nSave the cursor.\nShow the cursor.\nChange the cursor style to steady bar\nChange the cursor style to steady block\nChange the cursor style to steady underline\nMove cursor up.\nReturn the current cursor position.\nReturns the argument unchanged.\nCreate a hide cursor wrapper struct for the provided …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMove the cursor to (x, y).\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAlt modifier key\nAlt + Ctrl\nAlt + Ctrl + Shift\nAlt + Shift\nBackward Tab key.\nBackspace.\nNormal character.\nCtrl modifier key Note that certain keys may not be …\nCtrl + Shift\nDelete key.\nDown arrow.\nEnd key.\nEsc key.\nAn event reported by the terminal.\nFunction keys.\nA mouse button is held over the given coordinates.\nHome key.\nInsert key.\nStruct representing a Key composed of a KeyCode and KeyMod …\nA key press.\nA key.\nKey combinations for keys besides Alt(char) and Ctrl(char) …\nThe left mouse button.\nLeft arrow.\nThe middle mouse button.\nA mouse button press, release or wheel use at specific …\nA mouse button.\nA mouse related event.\nNull byte.\nPage Down key.\nPage Up key.\nA mouse button was pressed.\nA mouse button was released.\nThe right mouse button.\nRight arrow.\nShift modifier key Note that capital letters do not note …\nAn event that cannot currently be evaluated.\nUp arrow.\nMouse wheel is going down.\nMouse wheel is going up.\nany key that could be pressed\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nany key modifier ctrl + alt + shift (excluding capital …\nCreates a new Key with no KeyMod\nCreates a new Key with provided KeyMod\nParse an Event from <code>item</code> and possibly subsequent bytes …\nExtension trait for ConsoleWrite to turn mouse support on …\nExtension to <code>ConsoleRead</code> trait.\nAn iterator over input events.\nAn iterator over input events.\nAn iterator over input keys.\nA terminal with added mouse support.\nAn iterator over input events.\nAn iterator over input events and the raw bytes that make …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the next input event from the console. This version …\nGet the next input event from the console.\nGet the next key event from the console.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator over key inputs.\nTurn mouse support off for the console.\nTurn mouse support on for the console.\nTypes which can be converted into “raw mode”.\nA terminal restorer, which keeps the previous state of the …\nTemporarily switch to raw mode\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSwitch to raw mode.\nSwitch to original (non-raw) mode\nSwitch to raw mode.\nTemporarily switch to original mode\nA terminal restorer, which wraps a type implementing …\nSwitch to the alternate screen buffer of the terminal.\nSwitch to the main screen buffer of the terminal.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an alternate screen wrapper struct for the provided …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nScroll down.\nScroll up.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBlinking text (not widely supported).\nBold text.\nCrossed out text (not widely supported).\nFainted text (not widely supported).\nFramed text (not widely supported).\nInverted colors (negative mode).\nItalic text.\nUndo blinking text (not widely supported).\nUndo bold text.\nUndo crossed out text (not widely supported).\nUndo fainted text (not widely supported).\nUndo inverted colors (negative mode).\nUndo italic text.\nUndo underlined text.\nReset SGR parameters.\nUnderlined text.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")